# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-12
# This file is distributed under the same license as the URE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: URE 1.0rc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-19 22:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../api_reference/generated/lightning.app.components.python.tracer.TracerPythonScript.rst:7
msgid "TracerPythonScript"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:1 of
msgid "Bases: :py:class:`lightning.app.core.work.LightningWork`"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:1 of
msgid "The TracerPythonScript class enables to easily run a python script."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:3 of
msgid ""
"When subclassing this class, you can configure your own "
":class:`~lightning.app.utilities.tracer.Tracer` by "
":meth:`~lightning.app.components.python.tracer.TracerPythonScript.configure_tracer`"
" method."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:6 of
msgid ""
"The tracer is quite a magical class. It enables you to inject code into a"
" script execution without changing it."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript
#: lightning.app.components.python.tracer.TracerPythonScript.run of
msgid "Parameters"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:9 of
msgid "Path of the python script to run."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:10 of
msgid "The arguments to be passed to the script."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:12 of
msgid "Collection of object names to collect after the script execution."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:14 of
msgid "Environment variables to be passed to the script."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:15 of
msgid "LightningWork Keyword arguments."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript of
msgid "Raises"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:17 of
msgid "If the provided `script_path` doesn't exists."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:19 of
msgid "**How does it work?**"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:21 of
msgid ""
"It works by executing the python script with python built-in `runpy "
"<https://docs.python.org/3/library/runpy.html>`_ run_path method. This "
"method takes any python globals before executing the script, e.g., you "
"can modify classes or function from the script."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:27 of
msgid "Example"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:38 of
msgid ""
"In the example below, we subclass the  "
":class:`~lightning.app.components.python.TracerPythonScript` component "
"and override its configure_tracer method."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:41 of
msgid ""
"Using the Tracer, we are patching the ``__init__`` method of the PyTorch "
"Lightning Trainer. Once the script starts running and if a Trainer is "
"instantiated, the provided ``pre_fn`` is called and we inject a Lightning"
" callback."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:45 of
msgid ""
"This callback has a reference to the work and on every batch end, we are "
"capturing the trainer ``global_step`` and ``best_model_path``."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:48 of
msgid ""
"Even more interesting, this component works for ANY PyTorch Lightning "
"script and its state can be used in real time in a UI."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript:55 of
msgid ""
"Once implemented, this component can easily be integrated within a larger"
" app to execute a specific python script."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.configure_tracer:1
#: of
msgid "Override this hook to customize your tracer when running PythonScript."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.configure_tracer
#: of
msgid "Return type"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.configure_tracer:4
#: of
msgid ":py:class:`~lightning.app.utilities.tracer.Tracer`"
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.on_after_run:1 of
msgid "Called after the python script is executed."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.on_before_run:1 of
msgid "Called before the python script is executed."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.on_exit:1 of
msgid "Override this hook to add your logic when the work is exiting."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.run:2 of
msgid "A dictionary of arguments to be be added to script_args."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.run:4 of
msgid ""
"Passes an incrementing counter to enable the re-execution of "
"LightningWorks."
msgstr ""

#: lightning.app.components.python.tracer.TracerPythonScript.run:6 of
msgid ""
"A path string determining where the source is extracted, default is "
"current directory."
msgstr ""

